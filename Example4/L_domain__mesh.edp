// Boundary type "shape gradient"
load "lapack"  
load "msh3"

// Function
func f = 1;
int m, n;

// Time
real M = 25; 
real T = 0.25;
real dt = T/M; 
real t = 0;

// Mesh
border ba(t=0, 1){x=t; y=0; label=1;}
border bb(t=0, 0.5){x=1; y=t; label=1;}
border bc(t=0, 0.5){x=1-t; y=0.5; label=1;}
border bd(t=0.5, 1){x=0.5; y=t; label=1;}
border be(t=0.5, 1){x=1-t; y=1; label=1;}
border bf(t=0, 1){x=0; y=1-t; label=1;}
real Nodee = 32;
mesh The = buildmesh(ba(Nodee) + bb(Nodee/2) + bc(Nodee/2) + bd(Nodee/2) + be(Nodee/2) + bf(Nodee));
plot(The,ps="L_domain.eps");
cout <<"The above is an approximate exact solution."<<endl;